'use strict';

const indexClimbsHandlerbars = require('../templates/helpers/index-climbs.handlebars');

// this function will make the modals shake left to right quickly when called
function shakeForm() {
  let l = 20;
  for (let i = 0; i < 10; i++)
    $(".modal").animate({
      'margin-left': "+=" + (l = -l) + 'px',
      'margin-right': "-=" + l + 'px'
    }, 50);
}

const indexSuccess = (data) => {

  // shows the container that has the table of data
  $('.update-delete-container').css('display', 'unset');
  $('.index').css('display', 'unset');

  // the user's climb data  is generated by handlebars and displayed in the
  // table
  let indexClimbsHtml = indexClimbsHandlerbars({
    climbs: data.climbs
  });
  $('.table-striped').html(indexClimbsHtml);
};

const createSuccess = () => {
  $('.clear-input-create').val('');
  $('#createClimbModal').modal('hide');
  $('#dropdownMenuButton').find('option:first').attr('selected', 'selected');
};

const createFailure = () => {
  // modals shake to indicate that the climb was not created because of input
  // error
  shakeForm();
};

const updateSuccess = (id) => {
  $('.updateClimbModal' + id).modal('toggle');
  $('.modal-backdrop').remove();
};

const updateFailure = () => {
  // modals shake to indicate that the climb was not updated because of input
  // error
  shakeForm();
};

const destroySuccess = (id) => {
  // console.log(pass);
  $('.destroyClimbModal' + id).modal('toggle');
  $('.modal-backdrop').remove();
};

const destroyFailure = () => {
  // modals shake to indicate that the climb was not deleted because of error
  shakeForm();
};

module.exports = {
  indexSuccess,
  createSuccess,
  createFailure,
  updateSuccess,
  updateFailure,
  destroySuccess,
  destroyFailure,
};
